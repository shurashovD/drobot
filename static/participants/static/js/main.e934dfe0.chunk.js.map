{"version":3,"sources":["redux/alertSlice.js","components/AlertComponent.js","redux/authSlice.js","hooks/auth.hook.js","components/Header.js","components/Loader.js","redux/loaderSlice.js","hooks/http.hook.js","pages/LoginPage.js","pages/ProfilePage.js","Router.js","App.js","redux/store.js","index.js"],"names":["alertSlice","createSlice","name","initialState","show","variant","text","reducers","alertHide","state","alertShow","payload","actions","AlertComponent","useSelector","alertState","dispatch","useDispatch","Alert","dismissible","className","style","zIndex","onClose","authSlice","id","authSliceLogin","_id","authSliceLogout","useAuth","login","useCallback","localStorage","setItem","JSON","stringify","logout","removeItem","useEffect","parse","getItem","Header","authState","Container","fluid","Navbar","bg","expand","Toggle","Collapse","Nav","Link","href","onClick","Loader","loaderState","backgroundColor","Spinner","animation","loaderSlice","loaderSetShow","useHttp","useState","error","setError","loading","setLoading","progress","setProgress","auth","request","url","a","method","body","headers","fetch","response","data","Error","result","ok","message","sendFormData","files","formData","FormData","Object","entries","key","value","append","i","fileKey","fileName","xhr","XMLHttpRequest","open","setRequestHeader","Promise","resolve","reject","send","upload","onprogress","event","parseInt","loaded","total","onreadystatechange","readyState","status","getFile","blob","clearError","LoginPage","mail","form","setForm","feedbacks","setFeedbacks","validated","setValidated","submit","Form","noValidate","onSubmit","preventDefault","Group","controlId","Label","Control","type","onChange","target","isInvalid","Feedback","Text","Button","disabled","size","ProfilePage","setResult","setShow","referee","taks","title","setTitle","src","setSrc","getCompetitions","handleClick","getAttribute","task","map","competition","comments","categoryName","items","refereeName","taskName","link","Offcanvas","onHide","placement","Body","controls","autoPlay","Routes","path","to","App","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e934dfe0.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const alertSlice = createSlice({\r\n    name: 'alertSlice',\r\n    initialState: {\r\n        show: false, variant: 'success', text: ''\r\n    },\r\n    reducers: {\r\n        alertHide: state => ({ ...state, show: false }),\r\n        alertShow: (state, {payload}) => ({ ...state, show: true, variant: payload.variant, text: payload.text })\r\n    }\r\n})\r\n\r\nexport const { alertHide, alertShow } = alertSlice.actions\r\nexport default alertSlice.reducer","import React from \"react\"\r\nimport { Alert } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { alertHide } from \"../redux/alertSlice\"\r\n\r\nexport const AlertComponent = () => {\r\n    const { show, variant, text } = useSelector(state => state.alertState)\r\n    const dispatch = useDispatch()\r\n\r\n    return show ? (\r\n        <Alert variant={variant} dismissible className=\"position-fixed top-0 left-0 mt-1 w-100\" style={{zIndex: 1080}}\r\n            onClose={() => dispatch(alertHide())}\r\n        >\r\n            {text}\r\n        </Alert>\r\n    ) : <></>\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'authSlice',\r\n    initialState: {\r\n        id: null\r\n    },\r\n    reducers: {\r\n        authSliceLogin: (state, {payload}) => ({...state, id: payload._id, name: payload.name}),\r\n        authSliceLogout: state => ({...state, id: null, name: null})\r\n    }\r\n})\r\n\r\nexport const { authSliceLogin, authSliceLogout } = authSlice.actions\r\nexport default authSlice.reducer","import { useCallback, useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { authSliceLogin, authSliceLogout } from \"../redux/authSlice\"\r\n\r\nexport const useAuth = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const login = useCallback(({_id, name}) => {\r\n        dispatch(authSliceLogin({_id, name}))\r\n        localStorage.setItem('drobot-participant',  JSON.stringify({ _id, name }))\r\n    }, [dispatch])\r\n\r\n    const logout = useCallback(() => {\r\n        dispatch(authSliceLogout())\r\n        localStorage.removeItem('drobot-participant')\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const { _id, name } = JSON.parse(localStorage.getItem('drobot-participant'))\r\n            if ( _id ) {\r\n                login({_id, name})\r\n            }\r\n        }\r\n        catch {}\r\n    }, [login])\r\n\r\n    return { login, logout }\r\n}","import React from \"react\"\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useAuth } from \"../hooks/auth.hook\"\r\n\r\nexport const Header = () => {\r\n    const {id} = useSelector(state => state.authState)\r\n    const { logout } = useAuth()\r\n\r\n    if ( !id ) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"p-0\">\r\n            <Navbar bg=\"light\" expand=\"lg\" className=\"px-1\">\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"ms-auto\">\r\n                        <Nav.Link href=\"#\" onClick={logout}>Выход</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </Container>\r\n    )\r\n}","import React, { useEffect } from \"react\"\r\nimport { Container, Spinner } from \"react-bootstrap\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nexport const Loader = () => {\r\n    const { show } = useSelector(state => state.loaderState)\r\n\r\n    return (\r\n        <Container fluid className={\"min-vh-100 m-0 position-fixed top-0 left-0 justify-content-center align-items-center \" + (show ? \"d-flex\" : \"d-none\")}\r\n            style={{ backgroundColor: 'rgba(255, 255, 255, 0.85)' }}\r\n        >\r\n            <Spinner animation=\"border\" variant=\"primary\" />\r\n        </Container>\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const loaderSlice = createSlice({\r\n    name: 'loaderSlice',\r\n    initialState: {\r\n        show: false\r\n    },\r\n    reducers: {\r\n        loaderSetShow: (state, {payload}) => ({ show: payload })\r\n    }\r\n})\r\n\r\nexport const { loaderSetShow } = loaderSlice.actions\r\nexport default loaderSlice.reducer","import { useCallback, useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { alertShow } from \"../redux/alertSlice\"\r\nimport { loaderSetShow } from \"../redux/loaderSlice\"\r\nimport { useAuth } from './auth.hook'\r\n\r\nexport const useHttp = () => {\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [progress, setProgress] = useState(0)\r\n    const { auth } = useAuth()\r\n    const dispatch = useDispatch()\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        headers['Content-Type'] = 'application/json'\r\n        headers['Authorization'] = `Base ${auth}`\r\n        if ( body ) body = JSON.stringify(body)\r\n        try {\r\n            const response = await fetch(url, { method, body, headers })\r\n            const data = await response.text()\r\n\r\n            try {\r\n                JSON.parse(data)\r\n            }\r\n            catch {\r\n                throw new Error('INVALID SERVER RESPONSE')\r\n            }\r\n\r\n            const result = JSON.parse(data)\r\n\r\n            if ( !response.ok ) {\r\n                throw new Error(result.message || 'SERVER ERROR')\r\n            }\r\n\r\n            setLoading(false)\r\n            return result\r\n        }\r\n        catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [auth])\r\n\r\n    const sendFormData = useCallback( async (url, data, files, headers = {}) => {\r\n        const formData = new FormData()\r\n        for ( let [key, value] of Object.entries(data)) {\r\n            formData.append(key, value)\r\n        }\r\n\r\n        for (let i in files) {\r\n            const [fileKey, fileName] = Object.entries(files[i])[0]\r\n            formData.append(fileKey, fileName)\r\n        }\r\n        \r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open('POST', url)\r\n\r\n        headers['Authorization'] = `Base ${auth}`\r\n        for ( let [key, value] of Object.entries(headers) ) {\r\n            xhr.setRequestHeader(key, value)\r\n        }\r\n\r\n        try {\r\n            return await new Promise((resolve, reject) => {\r\n                setProgress(0)\r\n                setLoading(true)\r\n                xhr.send(formData)\r\n                xhr.upload.onprogress = event =>  {\r\n                    setProgress(parseInt(100 * event.loaded / event.total))\r\n                }\r\n                xhr.onreadystatechange = () => {\r\n                    if (parseInt(xhr.readyState) === 4) {\r\n                        try {\r\n                            JSON.parse(xhr.response)\r\n                        }\r\n                        catch {\r\n                            reject({message: 'INVALID SERVER RESPONSE'})\r\n                        }\r\n                        const response = JSON.parse(xhr.response)\r\n                        if ( parseInt(xhr.status) < 300 ) {\r\n                            setProgress(0)\r\n                            setLoading(false)\r\n                            resolve(response)\r\n                        }\r\n                        reject(response)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        catch (e) {\r\n            setProgress(0)\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [auth])\r\n\r\n    const getFile = useCallback(async (url) => {\r\n        setLoading(true)\r\n        const headers = {}\r\n        headers['Authorization'] = `Base ${auth}`\r\n        try {\r\n            const response = await fetch(url, { method: 'GET', body: null, headers })\r\n            const result = await response.blob()\r\n\r\n            if ( !response.ok ) {\r\n                throw new Error(result.message || 'SERVER ERROR')\r\n            }\r\n\r\n            setLoading(false)\r\n            return result\r\n        }\r\n        catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [auth])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    useEffect(() => {\r\n        dispatch(loaderSetShow(loading))\r\n    }, [loading])\r\n\r\n    useEffect(() => {\r\n        if ( error ) {\r\n            dispatch(alertShow({ text: error, variant: 'danger' }))\r\n        }\r\n    }, [error, clearError])\r\n\r\n    return { request, sendFormData, getFile, loading, progress, error, clearError } \r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { useHttp } from \"../hooks/http.hook\"\r\nimport { Container, Form, Button, Spinner } from \"react-bootstrap\"\r\nimport { useAuth } from \"../hooks/auth.hook\"\r\n\r\nexport const LoginPage = () => {\r\n    const [form, setForm] = useState({ mail: '' })\r\n    const [feedbacks, setFeedbacks] = useState({ mail: '' })\r\n    const [validated, setValidated] = useState(false)\r\n\r\n    const { request, loading, error, clearError } = useHttp()\r\n    const { login } = useAuth()\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        if ( form.mail === '' ) {\r\n            setFeedbacks(state => ({ ...state,  mail: 'Введите почту' }))\r\n            setValidated(false)\r\n        }\r\n        else {\r\n            submit()\r\n        }\r\n    }\r\n\r\n    const submit = async () => {\r\n        try {\r\n            const response = await request('/api/masters/login', 'POST', form)\r\n            login(response)\r\n        }\r\n        catch {}\r\n    }\r\n\r\n    useEffect(() => {\r\n        setValidated(true)\r\n        setFeedbacks(state => ({ ...state,  mail: '' }))\r\n    }, [form])\r\n\r\n    useEffect(() => {\r\n        if ( error ) {\r\n            setFeedbacks(state => ({ ...state,  mail: error }))\r\n            setValidated(false)\r\n            clearError()\r\n        }\r\n    }, [error, clearError])\r\n\r\n    return (\r\n        <Container fluid className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Почта</Form.Label>\r\n                            <Form.Control type=\"email\" name=\"mail\"\r\n                                value={form.mail}\r\n                                onChange={event => setForm(state => ({...state, [event.target.name]: event.target.value}))}\r\n                                isInvalid={feedbacks.mail !== '' }\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {feedbacks.mail}\r\n                            </Form.Control.Feedback>\r\n                            <Form.Text className=\"text-muted\">\r\n                                Укажите ту же почту, что и при регитсрации на PE-2021\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" disabled={loading} className=\"col-3\">\r\n                            { !loading && <>Войти</> }\r\n                            { loading && <Spinner animation=\"border\" variant=\"white\" size=\"sm\" /> }\r\n                        </Button>\r\n                    </Form>\r\n        </Container>\r\n    )\r\n}","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Container, Offcanvas } from 'react-bootstrap'\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const ProfilePage = () => {\r\n    const [result, setResult] = useState([])\r\n    const [show, setShow] = useState(false)\r\n    const [title, setTitle] = useState({ referee: '', taks: '' })\r\n    const [src, setSrc] = useState()\r\n    const { request } = useHttp()\r\n    const {id, name} = useSelector(state => state.authState)\r\n\r\n    const getCompetitions = useCallback(async () => {\r\n        try {\r\n            const response = await request('/api/masters/get-comments', 'POST', {id})\r\n            setResult(response)\r\n        }\r\n        catch {}\r\n    }, [request, id])\r\n\r\n    const handleClick = async event => {\r\n        setSrc(event.target.getAttribute('data-link'))\r\n        setTitle({ referee: event.target.getAttribute('data-referee'), task: event.target.getAttribute('data-task') })\r\n        setShow(true)\r\n    }\r\n\r\n    const handleHide = () => {\r\n        setSrc(null)\r\n        setShow(false)\r\n    }\r\n\r\n    useEffect(getCompetitions, [getCompetitions])\r\n\r\n    return (\r\n        <Container fluid>\r\n            <h3>{name}</h3>\r\n            {\r\n                result.map(({_id, competition, comments}) => (\r\n                    <div key={_id} className=\"mb-3\">\r\n                        <p>{competition}</p>\r\n                        {\r\n                            comments.map(({_id, categoryName, items}) => (\r\n                                <div key={_id} className=\"mb-3\">\r\n                                    <p>{categoryName}</p>\r\n                                    {\r\n                                        items.map(({_id, refereeName, taskName, link}) => (\r\n                                            <button key={_id} className=\"p-2 rounded bg-light mb-1 w-100 border-0\"\r\n                                                data-link={link}\r\n                                                data-referee={refereeName}\r\n                                                data-task={taskName}\r\n                                                onClick={handleClick}\r\n                                            >\r\n                                                <span\r\n                                                    data-link={link}\r\n                                                    data-referee={refereeName}\r\n                                                    data-task={taskName}\r\n                                                >{refereeName} - {taskName}</span>\r\n                                            </button>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                ))\r\n            }\r\n            <Offcanvas show={show} onHide={handleHide} placement=\"bottom\">\r\n                <Offcanvas.Header className=\"d-flex flex-column justify-content-start align-items-start\">\r\n                    <p className=\"m-0\">{title.referee}</p>\r\n                    <p className=\"m-0\">{title.task}</p>\r\n                </Offcanvas.Header>\r\n                <Offcanvas.Body className=\"d-flex justify-content-center align-items-center\">\r\n                    <audio src={src} controls autoPlay className=\"w-100\" />\r\n                </Offcanvas.Body>\r\n            </Offcanvas>\r\n        </Container>\r\n    )\r\n}","import { useSelector } from 'react-redux'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginPage } from './pages/LoginPage'\r\nimport { ProfilePage } from './pages/ProfilePage'\r\n\r\nexport const Routes = () => {\r\n    const id = useSelector(state => state.authState).id\r\n\r\n    if ( id ) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/participants/profile\">\r\n                    <ProfilePage />\r\n                </Route>\r\n                <Redirect to=\"/participants/profile\" />\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/participants/login\">\r\n                <LoginPage />\r\n            </Route>\r\n            <Redirect to=\"/participants/login\" />\r\n        </Switch>\r\n    )\r\n}","import { Container } from 'react-bootstrap'\nimport { BrowserRouter } from 'react-router-dom'\nimport { AlertComponent } from './components/AlertComponent'\nimport { Header } from './components/Header'\nimport { Loader } from './components/Loader'\nimport { Routes } from \"./Router\"\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Loader />\n            <AlertComponent />\n            <Header />\n            <Routes />\n        </BrowserRouter>\n    )\n}\n\nexport default App\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport alertSlice from \"./alertSlice\";\r\nimport authSlice from \"./authSlice\";\r\nimport loaderSlice from \"./loaderSlice\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        authState: authSlice,\r\n        loaderState: loaderSlice,\r\n        alertState: alertSlice\r\n    }\r\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.scss'\nimport App from './App'\nimport store from './redux/store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)"],"sourceRoot":""}